// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`eslint with options should return a config for {
  language: 'JavaScript',
  environments: [ 'Browser', [length]: 1 ],
  frameworks: [ 'Cypress', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "browser": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:compat/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "compat/compat": "off",
      },
    },
    Object {
      "env": Object {
        "cypress/globals": true,
      },
      "extends": Array [
        "plugin:cypress/recommended",
      ],
      "files": Array [
        "**/*spec.*",
        "e2e/**/*",
        "tests/**/*",
      ],
      "plugins": Array [
        "cypress",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": Array [
      "document.body",
    ],
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'JavaScript',
  environments: [ 'Browser', [length]: 1 ],
  frameworks: [ 'Emotion', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "browser": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:compat/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
    "@emotion",
  ],
  "root": true,
  "rules": Object {
    "@emotion/import-from-emotion": "error",
    "@emotion/jsx-import": "off",
    "@emotion/no-vanilla": "error",
    "@emotion/pkg-renaming": "error",
    "@emotion/styled-import": "error",
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": Array [
      "document.body",
    ],
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'JavaScript',
  environments: [ 'Browser', [length]: 1 ],
  frameworks: [ 'Jest', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "browser": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:compat/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "compat/compat": "off",
      },
    },
    Object {
      "env": Object {
        "jest/globals": true,
      },
      "extends": Array [
        "plugin:jest/recommended",
      ],
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": Array [
        "jest",
      ],
      "rules": Object {
        "jest/unbound-method": "error",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.js",
        "**/jest*.js",
        "**/setupTests.js",
        "**/test-utils.js",
        "**/*Fixtures.js",
        "**/__fixtures__/**/*.js",
        "**/__mocks__/**/*.js",
      ],
      "globals": Object {
        "act": true,
        "actHook": true,
        "axe": true,
        "create": true,
        "fireEvent": true,
        "render": true,
        "renderHook": true,
        "renderToHtml": true,
        "userEvent": true,
        "wait": true,
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": Array [
      "document.body",
    ],
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'JavaScript',
  environments: [ 'Browser', [length]: 1 ],
  frameworks: [ 'Next.js', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "browser": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:compat/recommended",
    "next",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": Array [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'JavaScript',
  environments: [ 'Browser', [length]: 1 ],
  frameworks: [ 'Playwright', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "browser": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:compat/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "compat/compat": "off",
      },
    },
    Object {
      "extends": Array [
        "plugin:playwright/playwright-test",
      ],
      "files": Array [
        "**/*spec.*",
        "e2e/**/*",
        "tests/**/*",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": Array [
      "document.body",
    ],
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'JavaScript',
  environments: [ 'Browser', [length]: 1 ],
  frameworks: [ 'React', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "browser": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": Array [
      "document.body",
    ],
    "react": Object {
      "version": "detect",
    },
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'JavaScript',
  environments: [ 'Browser', [length]: 1 ],
  frameworks: [ 'Testing Library', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "browser": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:compat/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "compat/compat": "off",
      },
    },
    Object {
      "extends": Array [
        "plugin:testing-library/react",
      ],
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": Array [
        "testing-library",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": Array [
      "document.body",
    ],
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'JavaScript',
  environments: [ 'Node', [length]: 1 ],
  frameworks: [ 'Cypress', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:node/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    Object {
      "env": Object {
        "cypress/globals": true,
      },
      "extends": Array [
        "plugin:cypress/recommended",
      ],
      "files": Array [
        "**/*spec.*",
        "e2e/**/*",
        "tests/**/*",
      ],
      "plugins": Array [
        "cypress",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'JavaScript',
  environments: [ 'Node', [length]: 1 ],
  frameworks: [ 'Emotion', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:node/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
    "@emotion",
  ],
  "root": true,
  "rules": Object {
    "@emotion/import-from-emotion": "error",
    "@emotion/jsx-import": "off",
    "@emotion/no-vanilla": "error",
    "@emotion/pkg-renaming": "error",
    "@emotion/styled-import": "error",
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'JavaScript',
  environments: [ 'Node', [length]: 1 ],
  frameworks: [ 'Jest', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:node/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    Object {
      "env": Object {
        "jest/globals": true,
      },
      "extends": Array [
        "plugin:jest/recommended",
      ],
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": Array [
        "jest",
      ],
      "rules": Object {
        "jest/unbound-method": "error",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.js",
        "**/jest*.js",
        "**/setupTests.js",
        "**/test-utils.js",
        "**/*Fixtures.js",
        "**/__fixtures__/**/*.js",
        "**/__mocks__/**/*.js",
      ],
      "globals": Object {
        "act": true,
        "actHook": true,
        "axe": true,
        "create": true,
        "fireEvent": true,
        "render": true,
        "renderHook": true,
        "renderToHtml": true,
        "userEvent": true,
        "wait": true,
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'JavaScript',
  environments: [ 'Node', [length]: 1 ],
  frameworks: [ 'Next.js', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:node/recommended",
    "next",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": Array [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'JavaScript',
  environments: [ 'Node', [length]: 1 ],
  frameworks: [ 'Playwright', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:node/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    Object {
      "extends": Array [
        "plugin:playwright/playwright-test",
      ],
      "files": Array [
        "**/*spec.*",
        "e2e/**/*",
        "tests/**/*",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'JavaScript',
  environments: [ 'Node', [length]: 1 ],
  frameworks: [ 'React', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:node/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": Object {
      "version": "detect",
    },
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'JavaScript',
  environments: [ 'Node', [length]: 1 ],
  frameworks: [ 'Testing Library', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:node/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    Object {
      "extends": Array [
        "plugin:testing-library/react",
      ],
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": Array [
        "testing-library",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'TypeScript',
  environments: [ 'Browser', [length]: 1 ],
  frameworks: [ 'Cypress', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "browser": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:compat/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "extends": Array [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": Array [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "ecmaFeatures": Object {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": Array [
          ".json",
        ],
        "project": Array [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": Array [
          "error",
          Object {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": Array [
          "error",
          Object {
            "functions": false,
          },
        ],
        "comma-dangle": "off",
        "curly": Array [
          "error",
          "all",
        ],
        "function-paren-newline": "off",
        "implicit-arrow-linebreak": "off",
        "import/extensions": "off",
        "import/order": Array [
          "error",
          Object {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "indent": "off",
        "max-len": Array [
          "error",
          Object {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": Array [
          "error",
          Object {
            "allowAsStatement": true,
          },
        ],
        "object-curly-newline": "off",
        "operator-linebreak": "off",
        "quote-props": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.d.ts",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "compat/compat": "off",
      },
    },
    Object {
      "env": Object {
        "cypress/globals": true,
      },
      "extends": Array [
        "plugin:cypress/recommended",
      ],
      "files": Array [
        "**/*spec.*",
        "e2e/**/*",
        "tests/**/*",
      ],
      "plugins": Array [
        "cypress",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": Array [
      "document.body",
    ],
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'TypeScript',
  environments: [ 'Browser', [length]: 1 ],
  frameworks: [ 'Emotion', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "browser": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:compat/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "extends": Array [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": Array [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "ecmaFeatures": Object {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": Array [
          ".json",
        ],
        "project": Array [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": Array [
          "error",
          Object {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": Array [
          "error",
          Object {
            "functions": false,
          },
        ],
        "comma-dangle": "off",
        "curly": Array [
          "error",
          "all",
        ],
        "function-paren-newline": "off",
        "implicit-arrow-linebreak": "off",
        "import/extensions": "off",
        "import/order": Array [
          "error",
          Object {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "indent": "off",
        "max-len": Array [
          "error",
          Object {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": Array [
          "error",
          Object {
            "allowAsStatement": true,
          },
        ],
        "object-curly-newline": "off",
        "operator-linebreak": "off",
        "quote-props": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.d.ts",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
    "@emotion",
  ],
  "root": true,
  "rules": Object {
    "@emotion/import-from-emotion": "error",
    "@emotion/jsx-import": "off",
    "@emotion/no-vanilla": "error",
    "@emotion/pkg-renaming": "error",
    "@emotion/styled-import": "error",
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": Array [
      "document.body",
    ],
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'TypeScript',
  environments: [ 'Browser', [length]: 1 ],
  frameworks: [ 'Jest', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "browser": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:compat/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "extends": Array [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": Array [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "ecmaFeatures": Object {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": Array [
          ".json",
        ],
        "project": Array [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": Array [
          "error",
          Object {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": Array [
          "error",
          Object {
            "functions": false,
          },
        ],
        "comma-dangle": "off",
        "curly": Array [
          "error",
          "all",
        ],
        "function-paren-newline": "off",
        "implicit-arrow-linebreak": "off",
        "import/extensions": "off",
        "import/order": Array [
          "error",
          Object {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "indent": "off",
        "max-len": Array [
          "error",
          Object {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": Array [
          "error",
          Object {
            "allowAsStatement": true,
          },
        ],
        "object-curly-newline": "off",
        "operator-linebreak": "off",
        "quote-props": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.d.ts",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "compat/compat": "off",
      },
    },
    Object {
      "env": Object {
        "jest/globals": true,
      },
      "extends": Array [
        "plugin:jest/recommended",
      ],
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": Array [
        "jest",
      ],
      "rules": Object {
        "jest/unbound-method": "error",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.js",
        "**/jest*.js",
        "**/setupTests.js",
        "**/test-utils.js",
        "**/*Fixtures.js",
        "**/__fixtures__/**/*.js",
        "**/__mocks__/**/*.js",
      ],
      "globals": Object {
        "act": true,
        "actHook": true,
        "axe": true,
        "create": true,
        "fireEvent": true,
        "render": true,
        "renderHook": true,
        "renderToHtml": true,
        "userEvent": true,
        "wait": true,
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": Array [
      "document.body",
    ],
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'TypeScript',
  environments: [ 'Browser', [length]: 1 ],
  frameworks: [ 'Next.js', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "browser": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:compat/recommended",
    "next",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "extends": Array [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": Array [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "ecmaFeatures": Object {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": Array [
          ".json",
        ],
        "project": Array [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": Array [
          "error",
          Object {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": Array [
          "error",
          Object {
            "functions": false,
          },
        ],
        "comma-dangle": "off",
        "curly": Array [
          "error",
          "all",
        ],
        "function-paren-newline": "off",
        "implicit-arrow-linebreak": "off",
        "import/extensions": "off",
        "import/order": Array [
          "error",
          Object {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "indent": "off",
        "max-len": Array [
          "error",
          Object {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": Array [
          "error",
          Object {
            "allowAsStatement": true,
          },
        ],
        "object-curly-newline": "off",
        "operator-linebreak": "off",
        "quote-props": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.d.ts",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": Array [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'TypeScript',
  environments: [ 'Browser', [length]: 1 ],
  frameworks: [ 'Playwright', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "browser": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:compat/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "extends": Array [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": Array [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "ecmaFeatures": Object {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": Array [
          ".json",
        ],
        "project": Array [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": Array [
          "error",
          Object {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": Array [
          "error",
          Object {
            "functions": false,
          },
        ],
        "comma-dangle": "off",
        "curly": Array [
          "error",
          "all",
        ],
        "function-paren-newline": "off",
        "implicit-arrow-linebreak": "off",
        "import/extensions": "off",
        "import/order": Array [
          "error",
          Object {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "indent": "off",
        "max-len": Array [
          "error",
          Object {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": Array [
          "error",
          Object {
            "allowAsStatement": true,
          },
        ],
        "object-curly-newline": "off",
        "operator-linebreak": "off",
        "quote-props": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.d.ts",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "compat/compat": "off",
      },
    },
    Object {
      "extends": Array [
        "plugin:playwright/playwright-test",
      ],
      "files": Array [
        "**/*spec.*",
        "e2e/**/*",
        "tests/**/*",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": Array [
      "document.body",
    ],
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'TypeScript',
  environments: [ 'Browser', [length]: 1 ],
  frameworks: [ 'React', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "browser": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "extends": Array [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": Array [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "ecmaFeatures": Object {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": Array [
          ".json",
        ],
        "project": Array [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": Array [
          "error",
          Object {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": Array [
          "error",
          Object {
            "functions": false,
          },
        ],
        "comma-dangle": "off",
        "curly": Array [
          "error",
          "all",
        ],
        "function-paren-newline": "off",
        "implicit-arrow-linebreak": "off",
        "import/extensions": "off",
        "import/order": Array [
          "error",
          Object {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "indent": "off",
        "max-len": Array [
          "error",
          Object {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": Array [
          "error",
          Object {
            "allowAsStatement": true,
          },
        ],
        "object-curly-newline": "off",
        "operator-linebreak": "off",
        "quote-props": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.d.ts",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": Array [
      "document.body",
    ],
    "react": Object {
      "version": "detect",
    },
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'TypeScript',
  environments: [ 'Browser', [length]: 1 ],
  frameworks: [ 'Testing Library', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "browser": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:compat/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "extends": Array [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": Array [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "ecmaFeatures": Object {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": Array [
          ".json",
        ],
        "project": Array [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": Array [
          "error",
          Object {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": Array [
          "error",
          Object {
            "functions": false,
          },
        ],
        "comma-dangle": "off",
        "curly": Array [
          "error",
          "all",
        ],
        "function-paren-newline": "off",
        "implicit-arrow-linebreak": "off",
        "import/extensions": "off",
        "import/order": Array [
          "error",
          Object {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "indent": "off",
        "max-len": Array [
          "error",
          Object {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": Array [
          "error",
          Object {
            "allowAsStatement": true,
          },
        ],
        "object-curly-newline": "off",
        "operator-linebreak": "off",
        "quote-props": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.d.ts",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "compat/compat": "off",
      },
    },
    Object {
      "extends": Array [
        "plugin:testing-library/react",
      ],
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": Array [
        "testing-library",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": Array [
      "document.body",
    ],
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'TypeScript',
  environments: [ 'Node', [length]: 1 ],
  frameworks: [ 'Cypress', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:node/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "extends": Array [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": Array [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "ecmaFeatures": Object {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": Array [
          ".json",
        ],
        "project": Array [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": Array [
          "error",
          Object {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": Array [
          "error",
          Object {
            "functions": false,
          },
        ],
        "comma-dangle": "off",
        "curly": Array [
          "error",
          "all",
        ],
        "function-paren-newline": "off",
        "implicit-arrow-linebreak": "off",
        "import/extensions": "off",
        "import/order": Array [
          "error",
          Object {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "indent": "off",
        "max-len": Array [
          "error",
          Object {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": Array [
          "error",
          Object {
            "allowAsStatement": true,
          },
        ],
        "object-curly-newline": "off",
        "operator-linebreak": "off",
        "quote-props": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.d.ts",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    Object {
      "env": Object {
        "cypress/globals": true,
      },
      "extends": Array [
        "plugin:cypress/recommended",
      ],
      "files": Array [
        "**/*spec.*",
        "e2e/**/*",
        "tests/**/*",
      ],
      "plugins": Array [
        "cypress",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'TypeScript',
  environments: [ 'Node', [length]: 1 ],
  frameworks: [ 'Emotion', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:node/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "extends": Array [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": Array [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "ecmaFeatures": Object {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": Array [
          ".json",
        ],
        "project": Array [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": Array [
          "error",
          Object {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": Array [
          "error",
          Object {
            "functions": false,
          },
        ],
        "comma-dangle": "off",
        "curly": Array [
          "error",
          "all",
        ],
        "function-paren-newline": "off",
        "implicit-arrow-linebreak": "off",
        "import/extensions": "off",
        "import/order": Array [
          "error",
          Object {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "indent": "off",
        "max-len": Array [
          "error",
          Object {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": Array [
          "error",
          Object {
            "allowAsStatement": true,
          },
        ],
        "object-curly-newline": "off",
        "operator-linebreak": "off",
        "quote-props": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.d.ts",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
    "@emotion",
  ],
  "root": true,
  "rules": Object {
    "@emotion/import-from-emotion": "error",
    "@emotion/jsx-import": "off",
    "@emotion/no-vanilla": "error",
    "@emotion/pkg-renaming": "error",
    "@emotion/styled-import": "error",
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'TypeScript',
  environments: [ 'Node', [length]: 1 ],
  frameworks: [ 'Jest', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:node/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "extends": Array [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": Array [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "ecmaFeatures": Object {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": Array [
          ".json",
        ],
        "project": Array [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": Array [
          "error",
          Object {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": Array [
          "error",
          Object {
            "functions": false,
          },
        ],
        "comma-dangle": "off",
        "curly": Array [
          "error",
          "all",
        ],
        "function-paren-newline": "off",
        "implicit-arrow-linebreak": "off",
        "import/extensions": "off",
        "import/order": Array [
          "error",
          Object {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "indent": "off",
        "max-len": Array [
          "error",
          Object {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": Array [
          "error",
          Object {
            "allowAsStatement": true,
          },
        ],
        "object-curly-newline": "off",
        "operator-linebreak": "off",
        "quote-props": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.d.ts",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    Object {
      "env": Object {
        "jest/globals": true,
      },
      "extends": Array [
        "plugin:jest/recommended",
      ],
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": Array [
        "jest",
      ],
      "rules": Object {
        "jest/unbound-method": "error",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.js",
        "**/jest*.js",
        "**/setupTests.js",
        "**/test-utils.js",
        "**/*Fixtures.js",
        "**/__fixtures__/**/*.js",
        "**/__mocks__/**/*.js",
      ],
      "globals": Object {
        "act": true,
        "actHook": true,
        "axe": true,
        "create": true,
        "fireEvent": true,
        "render": true,
        "renderHook": true,
        "renderToHtml": true,
        "userEvent": true,
        "wait": true,
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'TypeScript',
  environments: [ 'Node', [length]: 1 ],
  frameworks: [ 'Next.js', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:node/recommended",
    "next",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "extends": Array [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": Array [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "ecmaFeatures": Object {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": Array [
          ".json",
        ],
        "project": Array [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": Array [
          "error",
          Object {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": Array [
          "error",
          Object {
            "functions": false,
          },
        ],
        "comma-dangle": "off",
        "curly": Array [
          "error",
          "all",
        ],
        "function-paren-newline": "off",
        "implicit-arrow-linebreak": "off",
        "import/extensions": "off",
        "import/order": Array [
          "error",
          Object {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "indent": "off",
        "max-len": Array [
          "error",
          Object {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": Array [
          "error",
          Object {
            "allowAsStatement": true,
          },
        ],
        "object-curly-newline": "off",
        "operator-linebreak": "off",
        "quote-props": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.d.ts",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": Array [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'TypeScript',
  environments: [ 'Node', [length]: 1 ],
  frameworks: [ 'Playwright', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:node/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "extends": Array [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": Array [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "ecmaFeatures": Object {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": Array [
          ".json",
        ],
        "project": Array [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": Array [
          "error",
          Object {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": Array [
          "error",
          Object {
            "functions": false,
          },
        ],
        "comma-dangle": "off",
        "curly": Array [
          "error",
          "all",
        ],
        "function-paren-newline": "off",
        "implicit-arrow-linebreak": "off",
        "import/extensions": "off",
        "import/order": Array [
          "error",
          Object {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "indent": "off",
        "max-len": Array [
          "error",
          Object {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": Array [
          "error",
          Object {
            "allowAsStatement": true,
          },
        ],
        "object-curly-newline": "off",
        "operator-linebreak": "off",
        "quote-props": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.d.ts",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    Object {
      "extends": Array [
        "plugin:playwright/playwright-test",
      ],
      "files": Array [
        "**/*spec.*",
        "e2e/**/*",
        "tests/**/*",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'TypeScript',
  environments: [ 'Node', [length]: 1 ],
  frameworks: [ 'React', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:node/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "extends": Array [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": Array [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "ecmaFeatures": Object {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": Array [
          ".json",
        ],
        "project": Array [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": Array [
          "error",
          Object {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": Array [
          "error",
          Object {
            "functions": false,
          },
        ],
        "comma-dangle": "off",
        "curly": Array [
          "error",
          "all",
        ],
        "function-paren-newline": "off",
        "implicit-arrow-linebreak": "off",
        "import/extensions": "off",
        "import/order": Array [
          "error",
          Object {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "indent": "off",
        "max-len": Array [
          "error",
          Object {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": Array [
          "error",
          Object {
            "allowAsStatement": true,
          },
        ],
        "object-curly-newline": "off",
        "operator-linebreak": "off",
        "quote-props": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.d.ts",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": Object {
      "version": "detect",
    },
  },
}
`;

exports[`eslint with options should return a config for {
  language: 'TypeScript',
  environments: [ 'Node', [length]: 1 ],
  frameworks: [ 'Testing Library', [length]: 1 ]
} 1`] = `
Object {
  "env": Object {
    "node": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
    "plugin:node/recommended",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
    Object {
      "extends": Array [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": Array [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "ecmaFeatures": Object {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": Array [
          ".json",
        ],
        "project": Array [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": Array [
          "error",
          Object {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": Array [
          "error",
          Object {
            "functions": false,
          },
        ],
        "comma-dangle": "off",
        "curly": Array [
          "error",
          "all",
        ],
        "function-paren-newline": "off",
        "implicit-arrow-linebreak": "off",
        "import/extensions": "off",
        "import/order": Array [
          "error",
          Object {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "indent": "off",
        "max-len": Array [
          "error",
          Object {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": Array [
          "error",
          Object {
            "allowAsStatement": true,
          },
        ],
        "object-curly-newline": "off",
        "operator-linebreak": "off",
        "quote-props": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.d.ts",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": Object {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.{story,stories}.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    Object {
      "files": Array [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    Object {
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": Object {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    Object {
      "extends": Array [
        "plugin:testing-library/react",
      ],
      "files": Array [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": Array [
        "testing-library",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
  },
}
`;

exports[`eslint with options should return a config with a copyright notice 1`] = `
Object {
  "extends": Array [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "airbnb-base",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:json/recommended",
      ],
      "files": Array [
        "**/*.json",
      ],
      "rules": Object {
        "notice/notice": "off",
      },
    },
    Object {
      "files": Array [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": Object {
        "no-console": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": Object {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": Object {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": Array [
    "prettier",
    "notice",
  ],
  "root": true,
  "rules": Object {
    "comma-dangle": "off",
    "curly": Array [
      "error",
      "all",
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "import/extensions": "off",
    "import/order": Array [
      "error",
      Object {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "max-len": Array [
      "error",
      Object {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\\\s|export\\\\s|\\\\s*it(?:\\\\.(?:skip|only))?\\\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "notice/notice": Array [
      "error",
      Object {
        "onNonMatchingHeader": "prepend",
        "template": "/**
 * Copyright <%= YEAR %>, <%= NAME %>
 * Licensed under the Apache License, Version 2.0 (the \\"License\\");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an \\"AS IS\\" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

",
        "templateVars": Object {
          "NAME": "SumUp Ltd.",
        },
        "varRegexps": Object {
          "NAME": /SumUp Ltd\\\\\\./,
        },
      },
    ],
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "quote-props": "off",
  },
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
  },
}
`;
