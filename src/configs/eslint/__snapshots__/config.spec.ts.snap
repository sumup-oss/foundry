// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Circuit UI' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "@sumup/circuit-ui",
  ],
  "root": true,
  "rules": {
    "@sumup/circuit-ui/component-lifecycle-imports": "error",
    "@sumup/circuit-ui/no-deprecated-components": "warn",
    "@sumup/circuit-ui/no-deprecated-props": "warn",
    "@sumup/circuit-ui/no-invalid-custom-properties": "error",
    "@sumup/circuit-ui/no-renamed-props": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Cypress' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "env": {
        "cypress/globals": true,
      },
      "extends": [
        "plugin:cypress/recommended",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
      "plugins": [
        "cypress",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Emotion' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "@emotion",
  ],
  "root": true,
  "rules": {
    "@emotion/import-from-emotion": "error",
    "@emotion/jsx-import": "off",
    "@emotion/no-vanilla": "error",
    "@emotion/pkg-renaming": "error",
    "@emotion/styled-import": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/no-unknown-property": [
      "error",
      {
        "ignore": [
          "css",
        ],
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Jest' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "env": {
        "jest/globals": true,
      },
      "extends": [
        "plugin:jest/recommended",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "jest",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Next.js' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "next",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Playwright' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "extends": [
        "plugin:playwright/playwright-test",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Storybook' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:storybook/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Testing Library' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "extends": [
        "plugin:testing-library/react",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "testing-library",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Circuit UI' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
    "@sumup/circuit-ui",
  ],
  "root": true,
  "rules": {
    "@sumup/circuit-ui/component-lifecycle-imports": "error",
    "@sumup/circuit-ui/no-deprecated-components": "warn",
    "@sumup/circuit-ui/no-deprecated-props": "warn",
    "@sumup/circuit-ui/no-invalid-custom-properties": "error",
    "@sumup/circuit-ui/no-renamed-props": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Cypress' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "env": {
        "cypress/globals": true,
      },
      "extends": [
        "plugin:cypress/recommended",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
      "plugins": [
        "cypress",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Emotion' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
    "@emotion",
  ],
  "root": true,
  "rules": {
    "@emotion/import-from-emotion": "error",
    "@emotion/jsx-import": "off",
    "@emotion/no-vanilla": "error",
    "@emotion/pkg-renaming": "error",
    "@emotion/styled-import": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/no-unknown-property": [
      "error",
      {
        "ignore": [
          "css",
        ],
      },
    ],
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Jest' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "env": {
        "jest/globals": true,
      },
      "extends": [
        "plugin:jest/recommended",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "jest",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Next.js' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "next",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Playwright' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "extends": [
        "plugin:playwright/playwright-test",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Storybook' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:storybook/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Testing Library' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "extends": [
        "plugin:testing-library/react",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "testing-library",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Circuit UI' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "@sumup/circuit-ui",
  ],
  "root": true,
  "rules": {
    "@sumup/circuit-ui/component-lifecycle-imports": "error",
    "@sumup/circuit-ui/no-deprecated-components": "warn",
    "@sumup/circuit-ui/no-deprecated-props": "warn",
    "@sumup/circuit-ui/no-invalid-custom-properties": "error",
    "@sumup/circuit-ui/no-renamed-props": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Cypress' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "env": {
        "cypress/globals": true,
      },
      "extends": [
        "plugin:cypress/recommended",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
      "plugins": [
        "cypress",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Emotion' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "@emotion",
  ],
  "root": true,
  "rules": {
    "@emotion/import-from-emotion": "error",
    "@emotion/jsx-import": "off",
    "@emotion/no-vanilla": "error",
    "@emotion/pkg-renaming": "error",
    "@emotion/styled-import": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/no-unknown-property": [
      "error",
      {
        "ignore": [
          "css",
        ],
      },
    ],
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Jest' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "env": {
        "jest/globals": true,
      },
      "extends": [
        "plugin:jest/recommended",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "jest",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Next.js' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "next",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Playwright' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "extends": [
        "plugin:playwright/playwright-test",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Storybook' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:storybook/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Testing Library' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "extends": [
        "plugin:testing-library/react",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "testing-library",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Circuit UI' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
    "@sumup/circuit-ui",
  ],
  "root": true,
  "rules": {
    "@sumup/circuit-ui/component-lifecycle-imports": "error",
    "@sumup/circuit-ui/no-deprecated-components": "warn",
    "@sumup/circuit-ui/no-deprecated-props": "warn",
    "@sumup/circuit-ui/no-invalid-custom-properties": "error",
    "@sumup/circuit-ui/no-renamed-props": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Cypress' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "env": {
        "cypress/globals": true,
      },
      "extends": [
        "plugin:cypress/recommended",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
      "plugins": [
        "cypress",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Emotion' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
    "@emotion",
  ],
  "root": true,
  "rules": {
    "@emotion/import-from-emotion": "error",
    "@emotion/jsx-import": "off",
    "@emotion/no-vanilla": "error",
    "@emotion/pkg-renaming": "error",
    "@emotion/styled-import": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/no-unknown-property": [
      "error",
      {
        "ignore": [
          "css",
        ],
      },
    ],
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Jest' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "env": {
        "jest/globals": true,
      },
      "extends": [
        "plugin:jest/recommended",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "jest",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Next.js' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "next",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Playwright' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "extends": [
        "plugin:playwright/playwright-test",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Storybook' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:storybook/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'JavaScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Testing Library' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "extends": [
        "plugin:testing-library/react",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "testing-library",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Circuit UI' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "@sumup/circuit-ui",
  ],
  "root": true,
  "rules": {
    "@sumup/circuit-ui/component-lifecycle-imports": "error",
    "@sumup/circuit-ui/no-deprecated-components": "warn",
    "@sumup/circuit-ui/no-deprecated-props": "warn",
    "@sumup/circuit-ui/no-invalid-custom-properties": "error",
    "@sumup/circuit-ui/no-renamed-props": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Cypress' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "env": {
        "cypress/globals": true,
      },
      "extends": [
        "plugin:cypress/recommended",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
      "plugins": [
        "cypress",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Emotion' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "@emotion",
  ],
  "root": true,
  "rules": {
    "@emotion/import-from-emotion": "error",
    "@emotion/jsx-import": "off",
    "@emotion/no-vanilla": "error",
    "@emotion/pkg-renaming": "error",
    "@emotion/styled-import": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/no-unknown-property": [
      "error",
      {
        "ignore": [
          "css",
        ],
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Jest' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "env": {
        "jest/globals": true,
      },
      "extends": [
        "plugin:jest/recommended",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "jest",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Next.js' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "next",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Playwright' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "extends": [
        "plugin:playwright/playwright-test",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Storybook' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:storybook/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'Next.js' ], plugins: [ 'Testing Library' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "extends": [
        "plugin:testing-library/react",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "testing-library",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Circuit UI' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
    "@sumup/circuit-ui",
  ],
  "root": true,
  "rules": {
    "@sumup/circuit-ui/component-lifecycle-imports": "error",
    "@sumup/circuit-ui/no-deprecated-components": "warn",
    "@sumup/circuit-ui/no-deprecated-props": "warn",
    "@sumup/circuit-ui/no-invalid-custom-properties": "error",
    "@sumup/circuit-ui/no-renamed-props": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Cypress' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "env": {
        "cypress/globals": true,
      },
      "extends": [
        "plugin:cypress/recommended",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
      "plugins": [
        "cypress",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Emotion' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
    "@emotion",
  ],
  "root": true,
  "rules": {
    "@emotion/import-from-emotion": "error",
    "@emotion/jsx-import": "off",
    "@emotion/no-vanilla": "error",
    "@emotion/pkg-renaming": "error",
    "@emotion/styled-import": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/no-unknown-property": [
      "error",
      {
        "ignore": [
          "css",
        ],
      },
    ],
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Jest' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "env": {
        "jest/globals": true,
      },
      "extends": [
        "plugin:jest/recommended",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "jest",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Next.js' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "next",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Playwright' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "extends": [
        "plugin:playwright/playwright-test",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Storybook' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:storybook/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Browser' ], frameworks: [ 'React' ], plugins: [ 'Testing Library' ] } 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:compat/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "compat/compat": "off",
      },
    },
    {
      "extends": [
        "plugin:testing-library/react",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "testing-library",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "lintAllEsApis": true,
    "polyfills": [
      "document.body",
    ],
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Circuit UI' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "@sumup/circuit-ui",
  ],
  "root": true,
  "rules": {
    "@sumup/circuit-ui/component-lifecycle-imports": "error",
    "@sumup/circuit-ui/no-deprecated-components": "warn",
    "@sumup/circuit-ui/no-deprecated-props": "warn",
    "@sumup/circuit-ui/no-invalid-custom-properties": "error",
    "@sumup/circuit-ui/no-renamed-props": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Cypress' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "env": {
        "cypress/globals": true,
      },
      "extends": [
        "plugin:cypress/recommended",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
      "plugins": [
        "cypress",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Emotion' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "@emotion",
  ],
  "root": true,
  "rules": {
    "@emotion/import-from-emotion": "error",
    "@emotion/jsx-import": "off",
    "@emotion/no-vanilla": "error",
    "@emotion/pkg-renaming": "error",
    "@emotion/styled-import": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/no-unknown-property": [
      "error",
      {
        "ignore": [
          "css",
        ],
      },
    ],
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Jest' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "env": {
        "jest/globals": true,
      },
      "extends": [
        "plugin:jest/recommended",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "jest",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Next.js' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "next",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Playwright' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "extends": [
        "plugin:playwright/playwright-test",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Storybook' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:storybook/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'Next.js' ], plugins: [ 'Testing Library' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "extends": [
        "plugin:testing-library/react",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "testing-library",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "polyfills": [
      "Array.prototype.copyWithin",
      "Array.prototype.fill",
      "Array.prototype.find",
      "Array.prototype.findIndex",
      "Array.prototype.flagMap",
      "Array.prototype.flat",
      "Array.from",
      "Array.prototype.includes",
      "Array.of",
      "Function.name",
      "Map",
      "Number.EPSILON",
      "Number.isFinite",
      "Number.isInteger",
      "Number.isNaN",
      "Number.isSafeInteger",
      "Number.MAX_SAFE_INTEGER",
      "Number.MIN_SAFE_INTEGER",
      "Number.parseFloat",
      "Number.parseInt",
      "Object.assign",
      "Object.entries",
      "Object.getOwnPropertyDescriptors",
      "Object.keys",
      "Object.is",
      "Object.values",
      "Reflect",
      "RegExp",
      "Set",
      "Symbol",
      "String.prototype.codePointAt",
      "String.prototype.endsWith",
      "String.prototype.fromCodePoint",
      "String.prototype.includes",
      "String.prototype.padStart",
      "String.prototype.padEnd",
      "String.prototype.raw",
      "String.prototype.repeat",
      "String.prototype.startsWith",
      "String.prototype.trimLeft",
      "String.prototype.trimRight",
      "URL",
      "URLSearchParams",
      "WeakMap",
      "WeakSet",
      "Promise",
      "fetch",
    ],
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Circuit UI' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
    "@sumup/circuit-ui",
  ],
  "root": true,
  "rules": {
    "@sumup/circuit-ui/component-lifecycle-imports": "error",
    "@sumup/circuit-ui/no-deprecated-components": "warn",
    "@sumup/circuit-ui/no-deprecated-props": "warn",
    "@sumup/circuit-ui/no-invalid-custom-properties": "error",
    "@sumup/circuit-ui/no-renamed-props": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Cypress' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "env": {
        "cypress/globals": true,
      },
      "extends": [
        "plugin:cypress/recommended",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
      "plugins": [
        "cypress",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Emotion' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
    "@emotion",
  ],
  "root": true,
  "rules": {
    "@emotion/import-from-emotion": "error",
    "@emotion/jsx-import": "off",
    "@emotion/no-vanilla": "error",
    "@emotion/pkg-renaming": "error",
    "@emotion/styled-import": "error",
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/no-unknown-property": [
      "error",
      {
        "ignore": [
          "css",
        ],
      },
    ],
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Jest' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "env": {
        "jest/globals": true,
      },
      "extends": [
        "plugin:jest/recommended",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "jest",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Next.js' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "next",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Playwright' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "extends": [
        "plugin:playwright/playwright-test",
      ],
      "files": [
        "e2e/**/*",
        "tests/**/*",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Storybook' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:storybook/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config for { language: 'TypeScript', environments: [ 'Node' ], frameworks: [ 'React' ], plugins: [ 'Testing Library' ] } 1`] = `
{
  "env": {
    "node": true,
  },
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:node/recommended",
    "plugin:security/recommended-legacy",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "curly": [
          "error",
          "all",
        ],
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-confusing-arrow": "off",
        "no-underscore-dangle": "error",
        "no-use-before-define": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
    {
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "node/no-extraneous-require": "off",
        "node/no-missing-require": "off",
        "node/no-unpublished-import": "off",
        "node/no-unpublished-require": "off",
      },
    },
    {
      "extends": [
        "plugin:testing-library/react",
      ],
      "files": [
        "**/*.spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
        "**/*Fixtures.*",
        "**/__fixtures__/**/*",
        "**/__mocks__/**/*",
      ],
      "plugins": [
        "testing-library",
      ],
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "node/no-extraneous-import": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
    "security/detect-object-injection": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`eslint > with options > should return a config when using Biome 1`] = `
{
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "prettier",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "airbnb-typescript/base",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      "files": [
        "**/*.{ts,tsx}",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaFeatures": {
          "modules": true,
        },
        "ecmaVersion": 6,
        "extraFileExtensions": [
          ".json",
        ],
        "project": [
          "./tsconfig.json",
        ],
        "sourceType": "module",
        "tsconfigRootDir": "/project/dir",
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/adjacent-overload-signatures": "off",
        "@typescript-eslint/array-type": "off",
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/consistent-type-exports": "off",
        "@typescript-eslint/consistent-type-imports": "off",
        "@typescript-eslint/default-param-last": "off",
        "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/no-dupe-class-members": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-extra-non-null-assertion": "off",
        "@typescript-eslint/no-extraneous-class": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/no-invalid-void-type": "off",
        "@typescript-eslint/no-loss-of-precision": "off",
        "@typescript-eslint/no-misused-new": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-redeclare": "off",
        "@typescript-eslint/no-restricted-imports": "off",
        "@typescript-eslint/no-this-alias": "off",
        "@typescript-eslint/no-throw-literal": "off",
        "@typescript-eslint/no-unnecessary-type-constraint": "off",
        "@typescript-eslint/no-unsafe-declaration-merging": "off",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
          },
        ],
        "@typescript-eslint/no-useless-constructor": "off",
        "@typescript-eslint/no-useless-empty-export": "off",
        "@typescript-eslint/only-throw-error": "off",
        "@typescript-eslint/parameter-properties": "off",
        "@typescript-eslint/prefer-as-const": "off",
        "@typescript-eslint/prefer-enum-initializers": "off",
        "@typescript-eslint/prefer-for-of": "off",
        "@typescript-eslint/prefer-function-type": "off",
        "@typescript-eslint/prefer-literal-enum-member": "off",
        "@typescript-eslint/prefer-namespace-keyword": "off",
        "@typescript-eslint/prefer-optional-chain": "off",
        "@typescript-eslint/quotes": "off",
        "@typescript-eslint/require-await": "off",
        "constructor-super": "off",
        "curly": "off",
        "default-case": "off",
        "default-case-last": "off",
        "default-param-last": "off",
        "dot-notation": "off",
        "eqeqeq": "off",
        "for-direction": "off",
        "getter-return": "off",
        "import/extensions": "off",
        "import/no-cycle": [
          "error",
          {
            "maxDepth": 7,
          },
        ],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "jsx-ally/alt-text": "off",
        "jsx-ally/anchor-has-content": "off",
        "jsx-ally/anchor-is-valid": "off",
        "jsx-ally/aria-activedescendant-has-tabindex": "off",
        "jsx-ally/aria-props": "off",
        "jsx-ally/aria-proptypes": "off",
        "jsx-ally/aria-role": "off",
        "jsx-ally/aria-unsupported-elements": "off",
        "jsx-ally/autocomplete-valid": "off",
        "jsx-ally/click-events-have-key-events": "off",
        "jsx-ally/heading-has-content": "off",
        "jsx-ally/html-has-lang": "off",
        "jsx-ally/iframe-has-title": "off",
        "jsx-ally/img-redundant-alt": "off",
        "jsx-ally/interactive-support-focus": "off",
        "jsx-ally/label-has-associated-control": "off",
        "jsx-ally/lang": "off",
        "jsx-ally/media-has-caption": "off",
        "jsx-ally/mouse-events-have-key-events": "off",
        "jsx-ally/no-access-key": "off",
        "jsx-ally/no-aria-hidden-on-focusable": "off",
        "jsx-ally/no-autofocus": "off",
        "jsx-ally/no-distracting-elements": "off",
        "jsx-ally/no-interactive-element-to-noninteractive-role": "off",
        "jsx-ally/no-noninteractive-element-to-interactive-role": "off",
        "jsx-ally/no-noninteractive-tabindex": "off",
        "jsx-ally/no-redundant-roles": "off",
        "jsx-ally/prefer-tag-over-role": "off",
        "jsx-ally/role-has-required-aria-props": "off",
        "jsx-ally/scope": "off",
        "jsx-ally/tabindex-no-positive": "off",
        "max-len": [
          "error",
          {
            "code": 80,
            "ignoreComments": true,
            "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
            "ignoreRegExpLiterals": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreUrls": true,
            "tabWidth": 2,
          },
        ],
        "no-array-constructor": "off",
        "no-async-promise-executor": "off",
        "no-case-declarations": "off",
        "no-class-assign": "off",
        "no-compare-neg-zero": "off",
        "no-cond-assign": "off",
        "no-confusing-arrow": "off",
        "no-console": "off",
        "no-const-assign": "off",
        "no-constant-condition": "off",
        "no-constructor-return": "off",
        "no-control-regex": "off",
        "no-debugger": "off",
        "no-dupe-args": "off",
        "no-dupe-class-members": "off",
        "no-dupe-else-if": "off",
        "no-dupe-keys": "off",
        "no-duplicate-case": "off",
        "no-else-return": "off",
        "no-empty": "off",
        "no-empty-character-class": "off",
        "no-empty-function": "off",
        "no-empty-pattern": "off",
        "no-empty-static-block": "off",
        "no-eval": "off",
        "no-ex-assign": "off",
        "no-extra-boolean-cast": "off",
        "no-extra-label": "off",
        "no-fallthrough": "off",
        "no-func-assign": "off",
        "no-global-assign": "off",
        "no-import-assign": "off",
        "no-inner-declarations": "off",
        "no-label-var": "off",
        "no-labels": "off",
        "no-lone-blocks": "off",
        "no-lonely-if": "off",
        "no-loss-of-precision": "off",
        "no-misleading-character-class": "off",
        "no-negated-condition": "off",
        "no-new-native-nonconstructor": "off",
        "no-new-symbol": "off",
        "no-new-wrappers": "off",
        "no-nonoctal-decimal-escape": "off",
        "no-obj-calls": "off",
        "no-param-reassign": "off",
        "no-prototype-builtins": "off",
        "no-redeclare": "off",
        "no-regex-spaces": "off",
        "no-restricted-globals": "off",
        "no-restricted-imports": "off",
        "no-self-assign": "off",
        "no-self-compare": "off",
        "no-sequences": "off",
        "no-setter-return": "off",
        "no-shadow-restricted-names": "off",
        "no-sparse-array": "off",
        "no-this-before-super": "off",
        "no-throw-literal": "off",
        "no-undef": "off",
        "no-undef-init": "off",
        "no-underscore-dangle": "error",
        "no-unneeded-ternary": "off",
        "no-unreachable": "off",
        "no-unsafe-finally": "off",
        "no-unsafe-negation": "off",
        "no-unsafe-optional-chaining": "off",
        "no-unused-labels": "off",
        "no-unused-private-class-members": "off",
        "no-unused-vars": "off",
        "no-use-before-define": "off",
        "no-useless-catch": "off",
        "no-useless-concat": "off",
        "no-useless-constructor": "off",
        "no-useless-rename": "off",
        "no-var": "off",
        "no-void": "off",
        "no-with": "off",
        "one-var": "off",
        "operator-assignment": "off",
        "prefer-arrow-callback": "off",
        "prefer-const": "off",
        "prefer-exponentiation-operator": "off",
        "prefer-numeric-literals": "off",
        "prefer-regex-literals": "off",
        "prefer-rest-params": "off",
        "prefer-template": "off",
        "react-hooks/exhaustive-deps": "off",
        "react-hooks/rules-of-hooks": "off",
        "react/button-has-type": "off",
        "react/jsx-boolean-value": "off",
        "react/jsx-fragments": "off",
        "react/jsx-key": "off",
        "react/jsx-no-comment-textnodes": "off",
        "react/jsx-no-duplicate-props": "off",
        "react/jsx-no-target-blank": "off",
        "react/jsx-no-useless-fragment": "off",
        "react/no-array-index-key": "off",
        "react/no-children-prop": "off",
        "react/no-danger": "off",
        "react/no-danger-with-children": "off",
        "react/prop-types": "off",
        "react/void-dom-elements-no-children": "off",
        "require-await": "off",
        "require-yield": "off",
        "use-isnan": "off",
        "valid-typeof": "off",
        "yoda": "off",
      },
    },
    {
      "files": [
        "**/*.d.ts",
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
          },
        ],
        "node/no-extraneous-import": "off",
        "spaced-comment": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
      },
    },
    {
      "files": [
        "**/*spec.{ts,tsx}",
        "**/setupTests.{ts,tsx}",
        "**/test-utils.{ts,tsx}",
      ],
      "rules": {
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
      },
    },
    {
      "files": [
        "**/*.{story,stories}.*",
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "import/no-extraneous-dependencies": "off",
        "no-alert": "off",
      },
    },
    {
      "files": [
        "**/*spec.*",
        "**/jest*",
        "**/setupTests.*",
        "**/test-utils.*",
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "root": true,
  "rules": {
    "@typescript-eslint/adjacent-overload-signatures": "off",
    "@typescript-eslint/array-type": "off",
    "@typescript-eslint/ban-types": "off",
    "@typescript-eslint/consistent-type-exports": "off",
    "@typescript-eslint/consistent-type-imports": "off",
    "@typescript-eslint/default-param-last": "off",
    "@typescript-eslint/dot-notation": "off",
    "@typescript-eslint/naming-convention": "off",
    "@typescript-eslint/no-dupe-class-members": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-extra-non-null-assertion": "off",
    "@typescript-eslint/no-extraneous-class": "off",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-invalid-void-type": "off",
    "@typescript-eslint/no-loss-of-precision": "off",
    "@typescript-eslint/no-misused-new": "off",
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-redeclare": "off",
    "@typescript-eslint/no-restricted-imports": "off",
    "@typescript-eslint/no-this-alias": "off",
    "@typescript-eslint/no-throw-literal": "off",
    "@typescript-eslint/no-unnecessary-type-constraint": "off",
    "@typescript-eslint/no-unsafe-declaration-merging": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-useless-constructor": "off",
    "@typescript-eslint/no-useless-empty-export": "off",
    "@typescript-eslint/only-throw-error": "off",
    "@typescript-eslint/parameter-properties": "off",
    "@typescript-eslint/prefer-as-const": "off",
    "@typescript-eslint/prefer-enum-initializers": "off",
    "@typescript-eslint/prefer-for-of": "off",
    "@typescript-eslint/prefer-function-type": "off",
    "@typescript-eslint/prefer-literal-enum-member": "off",
    "@typescript-eslint/prefer-namespace-keyword": "off",
    "@typescript-eslint/prefer-optional-chain": "off",
    "@typescript-eslint/quotes": "off",
    "@typescript-eslint/require-await": "off",
    "constructor-super": "off",
    "curly": "off",
    "default-case": "off",
    "default-case-last": "off",
    "default-param-last": "off",
    "dot-notation": "off",
    "eqeqeq": "off",
    "for-direction": "off",
    "getter-return": "off",
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "jsx-ally/alt-text": "off",
    "jsx-ally/anchor-has-content": "off",
    "jsx-ally/anchor-is-valid": "off",
    "jsx-ally/aria-activedescendant-has-tabindex": "off",
    "jsx-ally/aria-props": "off",
    "jsx-ally/aria-proptypes": "off",
    "jsx-ally/aria-role": "off",
    "jsx-ally/aria-unsupported-elements": "off",
    "jsx-ally/autocomplete-valid": "off",
    "jsx-ally/click-events-have-key-events": "off",
    "jsx-ally/heading-has-content": "off",
    "jsx-ally/html-has-lang": "off",
    "jsx-ally/iframe-has-title": "off",
    "jsx-ally/img-redundant-alt": "off",
    "jsx-ally/interactive-support-focus": "off",
    "jsx-ally/label-has-associated-control": "off",
    "jsx-ally/lang": "off",
    "jsx-ally/media-has-caption": "off",
    "jsx-ally/mouse-events-have-key-events": "off",
    "jsx-ally/no-access-key": "off",
    "jsx-ally/no-aria-hidden-on-focusable": "off",
    "jsx-ally/no-autofocus": "off",
    "jsx-ally/no-distracting-elements": "off",
    "jsx-ally/no-interactive-element-to-noninteractive-role": "off",
    "jsx-ally/no-noninteractive-element-to-interactive-role": "off",
    "jsx-ally/no-noninteractive-tabindex": "off",
    "jsx-ally/no-redundant-roles": "off",
    "jsx-ally/prefer-tag-over-role": "off",
    "jsx-ally/role-has-required-aria-props": "off",
    "jsx-ally/scope": "off",
    "jsx-ally/tabindex-no-positive": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-array-constructor": "off",
    "no-async-promise-executor": "off",
    "no-case-declarations": "off",
    "no-class-assign": "off",
    "no-compare-neg-zero": "off",
    "no-cond-assign": "off",
    "no-confusing-arrow": "off",
    "no-console": "off",
    "no-const-assign": "off",
    "no-constant-condition": "off",
    "no-constructor-return": "off",
    "no-control-regex": "off",
    "no-debugger": "off",
    "no-dupe-args": "off",
    "no-dupe-class-members": "off",
    "no-dupe-else-if": "off",
    "no-dupe-keys": "off",
    "no-duplicate-case": "off",
    "no-else-return": "off",
    "no-empty": "off",
    "no-empty-character-class": "off",
    "no-empty-function": "off",
    "no-empty-pattern": "off",
    "no-empty-static-block": "off",
    "no-eval": "off",
    "no-ex-assign": "off",
    "no-extra-boolean-cast": "off",
    "no-extra-label": "off",
    "no-fallthrough": "off",
    "no-func-assign": "off",
    "no-global-assign": "off",
    "no-import-assign": "off",
    "no-inner-declarations": "off",
    "no-label-var": "off",
    "no-labels": "off",
    "no-lone-blocks": "off",
    "no-lonely-if": "off",
    "no-loss-of-precision": "off",
    "no-misleading-character-class": "off",
    "no-negated-condition": "off",
    "no-new-native-nonconstructor": "off",
    "no-new-symbol": "off",
    "no-new-wrappers": "off",
    "no-nonoctal-decimal-escape": "off",
    "no-obj-calls": "off",
    "no-param-reassign": "off",
    "no-prototype-builtins": "off",
    "no-redeclare": "off",
    "no-regex-spaces": "off",
    "no-restricted-globals": "off",
    "no-restricted-imports": "off",
    "no-self-assign": "off",
    "no-self-compare": "off",
    "no-sequences": "off",
    "no-setter-return": "off",
    "no-shadow-restricted-names": "off",
    "no-sparse-array": "off",
    "no-this-before-super": "off",
    "no-throw-literal": "off",
    "no-undef": "off",
    "no-undef-init": "off",
    "no-underscore-dangle": "error",
    "no-unneeded-ternary": "off",
    "no-unreachable": "off",
    "no-unsafe-finally": "off",
    "no-unsafe-negation": "off",
    "no-unsafe-optional-chaining": "off",
    "no-unused-labels": "off",
    "no-unused-private-class-members": "off",
    "no-unused-vars": "off",
    "no-use-before-define": "off",
    "no-useless-catch": "off",
    "no-useless-concat": "off",
    "no-useless-constructor": "off",
    "no-useless-rename": "off",
    "no-var": "off",
    "no-void": "off",
    "no-with": "off",
    "one-var": "off",
    "operator-assignment": "off",
    "prefer-arrow-callback": "off",
    "prefer-const": "off",
    "prefer-exponentiation-operator": "off",
    "prefer-numeric-literals": "off",
    "prefer-regex-literals": "off",
    "prefer-rest-params": "off",
    "prefer-template": "off",
    "react-hooks/exhaustive-deps": "off",
    "react-hooks/rules-of-hooks": "off",
    "react/button-has-type": "off",
    "react/jsx-boolean-value": "off",
    "react/jsx-fragments": "off",
    "react/jsx-key": "off",
    "react/jsx-no-comment-textnodes": "off",
    "react/jsx-no-duplicate-props": "off",
    "react/jsx-no-target-blank": "off",
    "react/jsx-no-useless-fragment": "off",
    "react/no-array-index-key": "off",
    "react/no-children-prop": "off",
    "react/no-danger": "off",
    "react/no-danger-with-children": "off",
    "react/void-dom-elements-no-children": "off",
    "require-await": "off",
    "require-yield": "off",
    "use-isnan": "off",
    "valid-typeof": "off",
    "yoda": "off",
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
  },
}
`;

exports[`eslint > with options > should return a config with a copyright notice 1`] = `
{
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "plugin:prettier/recommended",
  ],
  "overrides": [
    {
      "files": [
        "api/**/*",
        "pages/api/**/*",
        "src/pages/api/**/*",
      ],
      "rules": {
        "no-console": "off",
      },
    },
    {
      "extends": [
        "plugin:json/recommended",
      ],
      "files": [
        "**/*.json",
      ],
      "rules": {
        "notice/notice": "off",
      },
    },
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "impliedStrict": true,
      "modules": true,
    },
    "ecmaVersion": 6,
    "sourceType": "module",
  },
  "plugins": [
    "notice",
  ],
  "root": true,
  "rules": {
    "curly": [
      "error",
      "all",
    ],
    "import/extensions": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 7,
      },
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignorePattern": "^(?:import\\s|export\\s|\\s*it(?:\\.(?:skip|only))?\\()",
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2,
      },
    ],
    "no-confusing-arrow": "off",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true,
      },
    ],
    "notice/notice": [
      "error",
      {
        "onNonMatchingHeader": "prepend",
        "template": "/**
 * Copyright <%= YEAR %>, <%= NAME %>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

",
        "templateVars": {
          "NAME": "SumUp Ltd.",
        },
        "varRegexps": {
          "NAME": /SumUp Ltd\\\\\\./,
        },
      },
    ],
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
    },
  },
}
`;
